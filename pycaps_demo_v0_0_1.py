# -*- coding: utf-8 -*-
"""PyCaps Demo v0.0.1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/117g6xujecjLyXHBwhwyzx0innCMLh_nj
"""

#@title ‚úÖ Step 0: Check for GPU access
#@markdown This notebook runs much faster with a GPU.
#@markdown Please ensure one is enabled before proceeding.
#@markdown ---
#@markdown **Instructions:**
#@markdown 1. Go to the menu: `Runtime` -> `Change runtime type`
#@markdown 2. In the "Hardware accelerator" dropdown, select `GPU` (T4 GPU).
#@markdown 3. Click `Save`.

import torch

if torch.cuda.is_available():
    print("‚úÖ GPU is enabled and ready to go!")
    print(f"GPU detected: {torch.cuda.get_device_name(0)}")
else:
    print("‚ö†Ô∏è WARNING: No GPU detected.")
    print("The transcription process will be slow.")
    print("Please follow the instructions above to enable the GPU.")

#@title üõ†Ô∏è Step 1: Install Pycaps and Dependencies (runs once)

!pip install -q git+https://github.com/francozanardi/pycaps.git
!playwright install chromium

print("‚úÖ Installation and setup complete!")

#@title üì§ Step 2: Upload Your Video File
from google.colab import files

print("Please select your video file to upload.")
uploaded = files.upload()

if not uploaded:
  raise Exception("No file was uploaded. Please run the cell again.")

input_video_path = list(uploaded.keys())[0]
print(f"‚úÖ Video '{input_video_path}' uploaded successfully!")

#@title üé® Step 3: Choose Your Style

import ipywidgets as widgets
from IPython.display import display
from pycaps.template import TemplateService
import os
import shutil

template_service = TemplateService()
available_templates = template_service.list_builtin_templates()
available_templates.remove('model')

print("Please select a template from the dropdown menu below:")

template_dropdown = widgets.Dropdown(
    options=available_templates,
    value='default',
    description='Template:',
    disabled=False,
)

save_button = widgets.Button(
    description='Select template',
    button_style='success',
    layout=widgets.Layout(width='50%')
)

def on_save_button_click(b):
  selected_template = template_dropdown.value

  if os.path.exists(custom_template_name):
      shutil.rmtree(custom_template_name)

  print(f"Creating an editable copy of the '{selected_template}' template...")

  !pycaps template create --name "{custom_template_name}" --from "{selected_template}"

  if os.path.exists(custom_template_path):
      print(f"\n‚úÖ Template '{selected_template}' is now ready.")
  else:
      print(f"\n‚ùå Error: Failed to select the template. Check the logs above.")
      raise SystemExit("Template copy failed")

custom_template_name = "my_custom_template"
custom_template_path = f"/content/{custom_template_name}"
save_button.on_click(on_save_button_click)

display(template_dropdown, save_button)

#@title ‚úèÔ∏è Step 4: Customize Your Template (Optional)
#@markdown You can edit the CSS and configuration directly here.
#@markdown After making your changes, **you must click the save button**.

import os
import shutil
import ipywidgets as widgets
from IPython.display import display
from google.colab import files
import json


css_path = os.path.join(custom_template_path, "styles.css")
json_path = os.path.join(custom_template_path, "pycaps.template.json")

css_content = json_content = ""
with open(css_path, 'r', encoding='utf-8') as f:
    css_content = f.read()
with open(json_path, 'r', encoding='utf-8') as f:
    json_content = f.read()

styles_textarea = widgets.Textarea(
    value=css_content,
    placeholder='Enter your CSS here',
    description='Styles:',
    layout=widgets.Layout(width='60%', height='300px')
)

json_text_area = widgets.Textarea(
    value=json_content,
    placeholder='Enter JSON here',
    description='Config:',
    layout=widgets.Layout(width='60%', height='300px')
)

button = widgets.Button(
    description='Save styles',
    button_style='success'
)

upload_button = widgets.FileUpload(
    description='Upload Resources (fonts, images, etc.)',
    multiple=True,
    layout=widgets.Layout(width='60%')
)

def on_button_click(b):
    with open(css_path, 'w', encoding='utf-8') as f:
        f.write(styles_textarea.value)
    with open(json_path, 'w', encoding='utf-8') as f:
        json_content = json.loads(json_text_area.value)
        json_content["css"] = "styles.css"
        if upload_button.value:
            json_content["resources"] = "resources"
        f.write(json.dumps(json_content, indent=4))

    if upload_button.value:
        resource_path = os.path.join(custom_template_path, 'resources')
        os.makedirs(resource_path, exist_ok=True)

        for filename, content in upload_button.value.items():
            destination_path = os.path.join(resource_path, filename)
            with open(destination_path, 'wb') as f:
                f.write(content['content'])
            print(f"‚úÖ Resource '{filename}' saved.")
    else:
        print("No resources were uploaded.")

    print("‚úÖ Customizations saved successfully!")

button.on_click(on_button_click)

print("‚úçÔ∏è Customize the template\n")
display(styles_textarea, json_text_area, upload_button, button)

#@title üî• Step 5: Generate Video!
import time

print("üöÄ Rendering final video... This will take a few minutes.")

output_filename = time.strftime("%Y%m%d%H%M%S.mp4", time.localtime())
!pycaps render --input "{input_video_path}" --template "{custom_template_name}" --output "{output_filename}"

print(f"\nüéâ Success! Your video is ready for download in the next step.")

#@title üíæ Step 6: Download Your Final Video
from google.colab import files

files.download(output_filename)